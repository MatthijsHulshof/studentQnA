version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: studentqna-db-user
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: studentqna
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    secrets:
      - postgres_user
      - postgres_password
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/postgres_user) -d studentqna"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: ./users/StudentQnA.Users.API
    container_name: studentqnauser-api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:8080"
    restart: always
    secrets:
      - postgres_user
      - postgres_password
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


  frontend:
    build: ./frontend/studentqna
    container_name: studentqna-frontend
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api/names
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 15s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  pgdata:

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt